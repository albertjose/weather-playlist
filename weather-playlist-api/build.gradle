buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
	        url 'https://repo.spring.io/libs-milestone'
	    }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"

group = 'com.ifood'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

dependencyManagement {
     imports {
          mavenBom 'org.springframework.cloud:spring-cloud-openfeign:2.0.0.M1'
     }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-data-redis')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
	compile('org.springframework.cloud:spring-cloud-starter-openfeign')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('io.github.openfeign.form:feign-form:3.2.2')
    compile('org.modelmapper:modelmapper:0.7.7')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

jacocoTestReport {
    reports {
        xml {
            enabled false // coveralls plugin depends on xml format report
        }

        html {
            enabled true
        }
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['com/ifood/domain*', 'com/ifood/client*', 'com/ifood/config*'])
        })
    }
}

